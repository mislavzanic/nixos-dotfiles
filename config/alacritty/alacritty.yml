# Configwration for Alacritty, the GPU enhanced terminal emulator

env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 140
    lines: 40

  padding:
    x: 0
    y: 0

  dynamic_padding: false

  # Available values:
  # - full: borders and title bar
  # - none: neither borders nor title bar
  # - transparent: title bar, transparent background and title bar buttons
  # - buttonless: title bar, transparent background, but no title bar buttons
  decorations: none

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  opacity: 0.80

scrolling:
  history: 9999

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

font:
  normal:
    family: Mononoki Nerd Font

  bold:
    family: Mononoki Nerd Font

  italic:
    family: Mononoki Nerd Font

  size: 11

  offset:
    x: 0
    y: 0

  glyph_offset:
    x: 0
    y: 0

  use_thin_strokes: true

draw_bold_text_with_bright_colors: false

schemes:
  campbell: &campbell
    primary:
      background: '0x0c0c0c'
      foreground: '0xcccccc'
    normal:
      black:      '0x0c0c0c'
      red:        '0xc50f1f'
      green:      '0x13a10e'
      yellow:     '0xc19c00'
      blue:       '0x0037da'
      magenta:    '0x881798'
      cyan:       '0x3a96dd'
      white:      '0xcccccc'
    bright:
      black:      '0x767676'
      red:        '0xe74856'
      green:      '0x16c60c'
      yellow:     '0xf9f1a5'
      blue:       '0x3b78ff'
      magenta:    '0xb4009e'
      cyan:       '0x61d6d6'
      white:      '0xf2f2f2'
  smoooth: &smoooth
    primary:
      foreground: '0xdbdbdb'
      background: '0x14191e'
    cursor:
      text: '0x000000'
      cursor: '0xfefffe'
    selection:
      text: '0x000000'
      background: '0xb3d7ff'
    normal:
      black:   '0x14191e'
      red:     '0xb43c29'
      green:   '0x00c200'
      yellow:  '0xc7c400'
      blue:    '0x2743c7'
      magenta: '0xbf3fbd'
      cyan:    '0x00c5c7'
      white:   '0xc7c7c7'
    bright:
      black:   '0x676767'
      red:     '0xdc7974'
      green:   '0x57e690'
      yellow:  '0xece100'
      blue:    '0xa6aaf1'
      magenta: '0xe07de0'
      cyan:    '0x5ffdff'
      white:   '0xfeffff'

  solarized: &solarized
    primary:
      background: '0x002b36'
      foreground: '0x839496'

    normal:
      black:   '0x073642'
      red:     '0xdc322f'
      green:   '0x859900'
      yellow:  '0xb58900'
      blue:    '0x268bd2'
      magenta: '0xd33682'
      cyan:    '0x2aa198'
      white:   '0xeee8d5'

    bright:
      black:   '0x002b36'
      red:     '0xcb4b16'
      green:   '0x586e75'
      yellow:  '0x657b83'
      blue:    '0x839496'
      magenta: '0x6c71c4'
      cyan:    '0x93a1a1'
      white:   '0xfdf6e3'

  kaolin-aurora: &kaolin-aurora
    primary:
      background: '0x14191e'
      foreground: '0xe6e6e8'

    normal:
      black:    '0x14191e'
      red:      '0xe55c7a'
      green:    '0x31E183'
      yellow:   '0xf5c791'
      blue:     '0x4ca6e8'
      magenta:  '0x9d81ba'
      cyan:     '0x49bdb0'
      white:    '0xe6e6e8'

    bright:
      black:    '0x454459'
      red:      '0xcd5c60'
      green:    '0x7CF083'
      yellow:   '0xdbac66'
      blue:     '0x91b9c7'
      magenta:  '0x6E6884'
      cyan:     '0x0D9C94'
      white:    '0xf2f2f2'

  catppuccin: &catppuccin
    primary:
      background: '0x1E1D2F'
      foreground: '0xD9E0EE'

  # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: '0x1E1D2F'
      cursor: '0xF5E0DC'

    # Normal colors
    normal:
      black:   '0x6E6C7E'
      red:     '0xF28FAD'
      green:   '0xABE9B3'
      yellow:  '0xFAE3B0'
      blue:    '0x96CDFB'
      magenta: '0xF5C2E7'
      cyan:    '0x89DCEB'
      white:   '0xD9E0EE'

    # Bright colors
    bright:
      black:   '0x988BA2'
      red:     '0xF28FAD'
      green:   '0xABE9B3'
      yellow:  '0xFAE3B0'
      blue:    '0x96CDFB'
      magenta: '0xF5C2E7'
      cyan:    '0x89DCEB'
      white:   '0xD9E0EE'

    indexed_colors:
      - { index: 16, color: '0xF8BD96' }
      - { index: 17, color: '0xF5E0DC' }

  onedark: &onedark
    primary:
      background: '0x1e2127'
      foreground: '0xabb2bf'

      bright_foreground: '0xe6efff'

    normal:
      black:   '0x1e2127'
      red:     '0xe06c75'
      green:   '0x98c379'
      yellow:  '0xd19a66'
      blue:    '0x61afef'
      magenta: '0xc678dd'
      cyan:    '0x56b6c2'
      white:   '0x828791'

    # Bright colors
    bright:
      black:   '0x5c6370'
      red:     '0xe06c75'
      green:   '0x98c379'
      yellow:  '0xd19a66'
      blue:    '0x61afef'
      magenta: '0xc678dd'
      cyan:    '0x56b6c2'
      white:   '0xe6efff'

    dim:
      black:   '0x1e2127'
      red:     '0xe06c75'
      green:   '0x98c379'
      yellow:  '0xd19a66'
      blue:    '0x61afef'
      magenta: '0xc678dd'
      cyan:    '0x56b6c2'
      white:   '0x828791'


        #colors: *kaolin-aurora
colors: *kaolin-aurora


# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Alt|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Alt
#   - Alt
#   - Option
#   - Alt
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Alt|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
#
key_bindings:
  - { key: V,        mods: Alt,       action: Paste                        }
  - { key: C,        mods: Alt,       action: Copy                         }
  - { key: Q,        mods: Alt,       action: Quit                         }
  - { key: N,        mods: Alt,       action: SpawnNewInstance             }
  - { key: Return,   mods: Alt,       action: ToggleFullscreen             }

  - { key: Home,                          chars: "\x1bOH",   mode: AppCursor   }
  - { key: Home,                          chars: "\x1b[H",   mode: ~AppCursor  }
  - { key: End,                           chars: "\x1bOF",   mode: AppCursor   }
  - { key: End,                           chars: "\x1b[F",   mode: ~AppCursor  }
  - { key: Equals,   mods: Alt,       action: IncreaseFontSize             }
  - { key: Minus,    mods: Alt,       action: DecreaseFontSize             }
  - { key: Minus,    mods: Alt|Shift, action: ResetFontSize                }
  - { key: Left,     mods: Shift,         chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Alt,       chars: "\x1b[1;5D"                   }
  - { key: Left,     mods: Alt,           chars: "\x1b[1;3D"                   }
  - { key: Left,                          chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                          chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,         chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Alt,       chars: "\x1b[1;5C"                   }
  - { key: Right,    mods: Alt,           chars: "\x1b[1;3C"                   }
  - { key: Right,                         chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                         chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,         chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Alt,       chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,           chars: "\x1b[1;3A"                   }
  - { key: Up,                            chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                            chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,         chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Alt,       chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,           chars: "\x1b[1;3B"                   }
  - { key: Down,                          chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                          chars: "\x1bOB",   mode: AppCursor   }
  - { key: Tab,      mods: Shift,         chars: "\x1b[Z"                      }
  - { key: F1,                            chars: "\x1bOP"                      }
  - { key: F2,                            chars: "\x1bOQ"                      }
  - { key: F3,                            chars: "\x1bOR"                      }
  - { key: F4,                            chars: "\x1bOS"                      }
  - { key: F5,                            chars: "\x1b[15~"                    }
  - { key: F6,                            chars: "\x1b[17~"                    }
  - { key: F7,                            chars: "\x1b[18~"                    }
  - { key: F8,                            chars: "\x1b[19~"                    }
  - { key: F9,                            chars: "\x1b[20~"                    }
  - { key: F10,                           chars: "\x1b[21~"                    }
  - { key: F11,                           chars: "\x1b[23~"                    }
  - { key: F12,                           chars: "\x1b[24~"                    }
  - { key: Back,                          chars: "\x7f"                        }
  - { key: Back,     mods: Alt,           chars: "\x1b\x7f"                    }
  - { key: Insert,                        chars: "\x1b[2~"                     }
  - { key: Delete,                        chars: "\x1b[3~"                     }
  - { key: Delete,                        chars: "\x1b[3~"                     }
  - { key: PageUp,        mods: Shift,           action: ScrollPageUp                 }
  - { key: PageDown,        mods: Shift,           action: ScrollPageDown                 }

    # shortcuts for tmux. the leader key is control-b (0x02)
  - { key: W,        mods: Alt|Shift,       chars: "\x02&"                       }  # close tab (kill)
  - { key: T,        mods: Alt|Shift,       chars: "\x02c"                       }  # new tab
  - { key: RBracket, mods: Alt|Shift, chars: "\x02n"                       }  # select next tab
  - { key: LBracket, mods: Alt|Shift, chars: "\x02p"                       }  # select previous tab
  - { key: RBracket, mods: Alt,       chars: "\x02o"                       }  # select next pane
  - { key: LBracket, mods: Alt,       chars: "\x02;"                       }  # select last (previously used) pane
  - { key: F,        mods: Alt,       chars: "\x02/"                       }  # search (upwards) (see tmux.conf)

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

  # URL launcher
  # url:
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    # launcher:
    #   program: xdg-open
    #   args: []

    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    # modifiers: Alt|Shift

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

# Mouse bindings
#
# Available fields:
# - mouse
# - action
# - mods (optional)
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# dynamic_title: false

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: ERROR

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# vim: nospell
